# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  drive_ios:
    #creates a build matrix for your jobs
    strategy:
      #set of different configurations of the virtual environment.
      matrix:
        device:
          - "iPhone 8 (13.6)"
          - "iPhone 11 Pro Max (13.6)"
      fail-fast: false
    #if conditional to prevent a job from running
    if: github.event_name != 'pull_request'
    runs-on: macos-latest
    #Identifies any jobs that must complete successfully before this job will run.
    #needs: test
    steps:
      - name: List all simulators
        run: xcrun instruments -s
      # get UUID  simulator and boot a simulator on mac from  command line
      - name: Start Simulator
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      # Run flutter integrate tests
      - name: Run Flutter tests
        run: flutter test
